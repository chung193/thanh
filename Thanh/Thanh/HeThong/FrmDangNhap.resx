<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bmhoGItHHvl/5QL5liG/bZoAAAAASUVORK5CYII=
</value>
  </data>
</root>